class GameCanvas {    //생성자 > 무언가를 초기화한다. 여기서는 this
    //new 된 GameCanvas 객체 의 this
    constructor() {
        this.dom = document.querySelector(".game-canvas");
        /** @type {CanvasRenderingContext2D} */
        this.dom.focus();//??
        this.ctx = this.dom.getContext("2d");
        this.boy = new Boy(290, 0);
        this.bg = new Background();
        //게임 상태 변수
        this.gameover = false;
        this.pause = false;

        this.dom.onclick = this.clickHandler.bind(this); //위임함수 callBack 함수
        this.dom.onkeydown = this.keyDownHandler.bind(this);
        this.dom.onkeyup = this.keyUpHandler.bind(this);
    }

    run() { //60프레임 화면 다시 그림
        if (this.pause)
            return;
        this.update();
        this.draw();

        // window.setTimeout(this.run.bind(this), 3000)
        window.setTimeout(() => {
            this.run();
        }, 1)
    }
    update(e) { //무브를 한턴씩 차례대로 나오게 잘개 쪼개는 역할 (에니메이션효과비슷)
        this.boy.update();
        // this.boy.move(2); // 상태바뀌고
    }
    draw() {
        this.bg.drawbg(this.ctx); // 다시그리고
        this.boy.draw(this.ctx); // 다시그리고

    }
    pause() {
        this.pause = true;
    }
    // ㅡㅡㅡㅡ   이벤트 핸들러   ㅡㅡㅡㅡㅡㅡ
    clickHandler(e) {
        // this.pause = true;

        // this.boy.move(2);

        this.boy.moveTo(e.x, e.y);

        // 화면지우기
        // this.boy.draw(this.ctx);
    }
    keyDownHandler(e) {
        switch (e.key) {
            case "ArrowUp": this.boy.move(1); break;
            case "ArrowRight": this.boy.move(2); break;
            case "ArrowDown": this.boy.move(3); break;
            case "ArrowLeft": this.boy.move(4); break;
        }
    }
    keyUpHandler(e) {
        switch (e.key) {
            case "ArrowUp": this.boy.stop(1); break;
            case "ArrowDown": this.boy.stop(3); break;
            case "ArrowRight": this.boy.stop(2); break;
            case "ArrowLeft": this.boy.stop(4); break;
        }

    }
}